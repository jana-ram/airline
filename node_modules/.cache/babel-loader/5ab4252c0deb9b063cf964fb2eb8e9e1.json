{"ast":null,"code":"import { ActionTypes } from '../actions/actionTypes';\nexport const getPassengerById = passenger => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('services').where(\"flightId\", \"==\", passenger).get().then(res => {\n      console.log(res);\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_SUCCESS,\n        passenger\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};\nexport const addPassenger = passenger => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('passengers').add(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_SUCCESS,\n        passenger\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};\nexport const updatePassenger = (id, passenger) => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('passengers').doc(id).update(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_SUCCESS\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/var/smartzi/airline-master/src/redux/actions/passengerActions.js"],"names":["ActionTypes","getPassengerById","passenger","dispatch","getState","getFirestore","firestore","collection","where","get","then","res","console","log","type","ADD_PASSENGER_SUCCESS","catch","err","ADD_PASSENGER_ERROR","addPassenger","add","updatePassenger","id","doc","update","UPDATE_PASSENGER_SUCCESS","UPDATE_PASSENGER_ERROR"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AAC9C,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,UAArB,EACCC,KADD,CACO,UADP,EACmB,IADnB,EACyBN,SADzB,EAECO,GAFD,GAEOC,IAFP,CAEaC,GAAD,IAAS;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAR,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEd,WAAW,CAACe,qBAApB;AAA2Cb,QAAAA;AAA3C,OAAD,CAAR;AACA,KALD,EAKGc,KALH,CAKUC,GAAD,IAAS;AACjBd,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEd,WAAW,CAACkB,mBAApB;AAAyCD,QAAAA;AAAzC,OAAD,CAAR;AACA,KAPD;AAQA,GAVD;AAWA,CAZM;AAcP,OAAO,MAAME,YAAY,GAAIjB,SAAD,IAAe;AAC1C,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AAEAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCa,GAAnC,CAAuClB,SAAvC,EAAkDQ,IAAlD,CAAuD,MAAM;AAC5DP,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEd,WAAW,CAACe,qBAApB;AAA2Cb,QAAAA;AAA3C,OAAD,CAAR;AACA,KAFD,EAEGc,KAFH,CAEUC,GAAD,IAAS;AACjBd,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEd,WAAW,CAACkB,mBAApB;AAAyCD,QAAAA;AAAzC,OAAD,CAAR;AACA,KAJD;AAKA,GARD;AASA,CAVM;AAYP,OAAO,MAAMI,eAAe,GAAG,CAACC,EAAD,EAAKpB,SAAL,KAAmB;AACjD,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCgB,GAAnC,CAAuCD,EAAvC,EAA2CE,MAA3C,CAAkDtB,SAAlD,EAA6DQ,IAA7D,CAAkE,MAAK;AACtEP,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEd,WAAW,CAACyB;AAApB,OAAD,CAAR;AACA,KAFD,EAEGT,KAFH,CAEUC,GAAD,IAAS;AACjBd,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEd,WAAW,CAAC0B,sBAApB;AAA4CT,QAAAA;AAA5C,OAAD,CAAR;AACA,KAJD;AAKA,GAPD;AAQA,CATM","sourcesContent":["import { ActionTypes } from '../actions/actionTypes';\n\nexport const getPassengerById = (passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\t\t\n\t\tconst firestore = getFirestore();\n\t\tfirestore.collection('services')\n\t\t.where(\"flightId\", \"==\", passenger)\n\t\t.get().then((res) => {\n\t\t\tconsole.log(res)\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n\t\t});\n\t}\n}\n\nexport const addPassenger = (passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\t\t\n\t\tconst firestore = getFirestore();\t\t\n\n\t\tfirestore.collection('passengers').add(passenger).then(() => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n\t\t});\n\t}\n}\n\nexport const updatePassenger = (id, passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\n\t\tconst firestore = getFirestore();\n\t\tfirestore.collection('passengers').doc(id).update(passenger).then(()=> {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_SUCCESS});\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_ERROR, err});\n\t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}