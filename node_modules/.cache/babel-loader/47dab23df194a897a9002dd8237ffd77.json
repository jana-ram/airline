{"ast":null,"code":"import { ActionTypes } from '../actions/actionTypes';\nimport { firestoreConnect } from 'react-redux-firebase';\nexport const getPassengerDetailById = (passenger, flightId) => dispatch => {\n  const result = firestoreConnect(props => [{\n    collection: 'passengers',\n    doc: passenger\n  }, {\n    collection: 'services',\n    where: [['flightId', '==', flightId]]\n  }]);\n  console.log(result); // return (dispatch, getState, {getFirestore}) => {\t\t\n  // \tconst firestore = getFirestore();\t\t\n  // \tfirestore.collection('passengers').add(passenger).then(() => {\n  // \t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n  // \t}).catch((err) => {\n  // \t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n  // \t});\n  // }\n};\nexport const addPassenger = passenger => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('passengers').add(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_SUCCESS,\n        passenger\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};\nexport const updatePassenger = (id, passenger) => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('passengers').doc(id).update(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_SUCCESS\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/var/smartzi/airline-master/src/redux/actions/passengerActions.js"],"names":["ActionTypes","firestoreConnect","getPassengerDetailById","passenger","flightId","dispatch","result","props","collection","doc","where","console","log","addPassenger","getState","getFirestore","firestore","add","then","type","ADD_PASSENGER_SUCCESS","catch","err","ADD_PASSENGER_ERROR","updatePassenger","id","update","UPDATE_PASSENGER_SUCCESS","UPDATE_PASSENGER_ERROR"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,OAAO,MAAMC,sBAAsB,GAAG,CAACC,SAAD,EAAWC,QAAX,KAAyBC,QAAQ,IAAG;AACzE,QAAMC,MAAM,GAAGL,gBAAgB,CAACM,KAAK,IAAI,CACxC;AAAEC,IAAAA,UAAU,EAAE,YAAd;AAA4BC,IAAAA,GAAG,EAAEN;AAAjC,GADwC,EAExC;AAAEK,IAAAA,UAAU,EAAE,UAAd;AAA0BE,IAAAA,KAAK,EAAE,CAAC,CAAC,UAAD,EAAa,IAAb,EAAmBN,QAAnB,CAAD;AAAjC,GAFwC,CAAV,CAA/B;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ,EALyE,CAMzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdM;AAiBP,OAAO,MAAMO,YAAY,GAAIV,SAAD,IAAe;AAC1C,SAAO,CAACE,QAAD,EAAWS,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACR,UAAV,CAAqB,YAArB,EAAmCS,GAAnC,CAAuCd,SAAvC,EAAkDe,IAAlD,CAAuD,MAAM;AAC5Db,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAEnB,WAAW,CAACoB,qBAApB;AAA2CjB,QAAAA;AAA3C,OAAD,CAAR;AACA,KAFD,EAEGkB,KAFH,CAEUC,GAAD,IAAS;AACjBjB,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAEnB,WAAW,CAACuB,mBAApB;AAAyCD,QAAAA;AAAzC,OAAD,CAAR;AACA,KAJD;AAKA,GAPD;AAQA,CATM;AAWP,OAAO,MAAME,eAAe,GAAG,CAACC,EAAD,EAAKtB,SAAL,KAAmB;AACjD,SAAO,CAACE,QAAD,EAAWS,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AAEAC,IAAAA,SAAS,CAACR,UAAV,CAAqB,YAArB,EAAmCC,GAAnC,CAAuCgB,EAAvC,EAA2CC,MAA3C,CAAkDvB,SAAlD,EAA6De,IAA7D,CAAkE,MAAK;AACtEb,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAEnB,WAAW,CAAC2B;AAApB,OAAD,CAAR;AACA,KAFD,EAEGN,KAFH,CAEUC,GAAD,IAAS;AACjBjB,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAEnB,WAAW,CAAC4B,sBAApB;AAA4CN,QAAAA;AAA5C,OAAD,CAAR;AACA,KAJD;AAKA,GARD;AASA,CAVM","sourcesContent":["import { ActionTypes } from '../actions/actionTypes';\nimport { firestoreConnect } from 'react-redux-firebase';\nexport const getPassengerDetailById = (passenger,flightId)  => dispatch =>{\n\tconst result = firestoreConnect(props => [\n\t\t{ collection: 'passengers', doc: passenger },\n\t\t{ collection: 'services', where: [['flightId', '==', flightId]] }\n\t]);\n\tconsole.log(result)\n\t// return (dispatch, getState, {getFirestore}) => {\t\t\n\t// \tconst firestore = getFirestore();\t\t\n\t// \tfirestore.collection('passengers').add(passenger).then(() => {\n\t// \t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n\t// \t}).catch((err) => {\n\t// \t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n\t// \t});\n\t// }\n}\n\n\nexport const addPassenger = (passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\t\t\n\t\tconst firestore = getFirestore();\t\t\n\t\tfirestore.collection('passengers').add(passenger).then(() => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n\t\t});\n\t}\n}\n\nexport const updatePassenger = (id, passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\n\t\tconst firestore = getFirestore();\n\t\t\n\t\tfirestore.collection('passengers').doc(id).update(passenger).then(()=> {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_SUCCESS});\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_ERROR, err});\n\t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}