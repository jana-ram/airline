{"ast":null,"code":"var _jsxFileName = \"/var/smartzi/airline-master/src/components/passengers/PassengerForm.js\";\n// import React, { useState } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Container from '@material-ui/core/Container';\n// import TextField from '@material-ui/core/TextField';\n// import Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import Select from '@material-ui/core/Select';\n// import { firestoreConnect } from 'react-redux-firebase';\n// import { compose } from 'redux';\n// import { connect } from 'react-redux';\n// import { Redirect } from 'react-router-dom';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormHelperText from '@material-ui/core/FormHelperText';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import { addPassenger, updatePassenger } from '../../redux/actions/passengerActions';\n// const useStyles = makeStyles((theme) => ({\n// \tpaper: {\n// \t\tmarginTop: theme.spacing(4),\n// \t\tdisplay: 'flex',\n// \t\tflexDirection: 'column',\n// \t\talignItems: 'center',\n// \t},\n// \tform: {\n// \t\twidth: '100%', // Fix IE 11 issue.\n// \t},\n// \tsubmit: {\n// \t\tmargin: theme.spacing(2, 0, 2),\n// \t},\n// \tformControl: {\n// \t\tmargin: theme.spacing(1),\n// \t\tminWidth: 120,\n// \t},\n// }));\n// const getDate = () => {\n// \tlet now = new Date();\n// \tlet d = now.getDate();\n// \tlet m = now.getMonth();\n// \tlet y = now.getFullYear();\n// \treturn '' + y + '-' + (m<=9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d)\n// }\n// const getSeatList = () => {\n// \tlet rows = 10;\n// \tlet seats = ['A', 'B', 'C', 'D', 'E', 'F'];\n// \tlet seatList = [];\n// \tfor(let i=1; i <= rows; i++) {\n// \t\tfor(let j=0; j < seats.length; j++) {\n// \t\t\tlet seatNo = i + seats[j];\t\t\t\n// \t\t\tseatList.push(seatNo);\n// \t\t}\n// \t}\n// \treturn seatList;\n// }\n// const PassengerForm = (props) => {\n// \tconst classes = useStyles();\t\n// \tconst {auth, services, passenger} = props;\n// \tconst flightId = props.match.params.flightId;\n// \tconst passengerid = props.match.params.id ?? null;\n// \tconst seatList = getSeatList();\n// \tconst [formData, updateFormData] = useState({\n// \t\tflightId: flightId,\n// \t\tname: passenger ? passenger.name : '',\n// \t\tdob: passenger ? passenger.dob : getDate(),\n// \t\taddress: passenger ? passenger.address : '',\n// \t\tpassportNo: passenger ? passenger.passportNo : '',\n// \t\tservice: passenger ? passenger.service : '',\n// \t\tseatNo: passenger ? passenger.seatNo : '',\n// \t\twheelChair: passenger ? passenger.wheelChair : false,\n// \t\tinfant: passenger ? passenger.infant : false,\t\t\n// \t});\n// \tconst [formErrors, updateFormErrors] = useState({\n// \t\tname: false,\n// \t\tseatNo: false\n// \t});\n// \tif (!auth.uid) return <Redirect to='/login' />\n// \tconst handleChange = (e) => {\n// \t\tupdateFormData({\n// \t\t\t...formData,\n// \t\t\t[e.target.name]: (e.target.type === 'checkbox') ? e.target.checked : e.target.value.trim()\n// \t\t});\n// \t\tupdateFormErrors({\n// \t\t\t...formErrors,\n// \t\t\t[e.target.name]: (e.target.value.trim() === '') ? true : false\n// \t\t});\n// \t};\n// \tconst handleSubmit = (e) => {\n// \t\te.preventDefault();\n// \t\tif (formData.name === '') {\t\t\t\n// \t\t\tupdateFormErrors({\n// \t\t\t\t...formErrors,\n// \t\t\t\tname: true\n// \t\t\t});\n// \t\t\treturn false;\n// \t\t}\n// \t\tconsole.log(formData);\n// \t\tif (formData.seatNo === '') {\t\t\t\n// \t\t\tupdateFormErrors({\n// \t\t\t\t...formErrors,\n// \t\t\t\tseatNo: true\n// \t\t\t});\n// \t\t\treturn false;\n// \t\t}\t\t\n// \t\tif (passengerid) {\n// \t\t\tconsole.log(formData);\n// \t\t\tprops.updatePassenger(passengerid, formData);\n// \t\t} else {\n// \t\t\tprops.addPassenger(formData);\n// \t\t}\n// \t};\t\n// \treturn (\n// \t\t<Container component=\"main\" maxWidth=\"xs\">\t\t\n// \t\t\t<div className={classes.paper}>\n// \t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n// \t\t\t\t\tAdd a passenger\n// \t\t\t\t</Typography>\n// \t\t\t\t<form className={classes.form} autoComplete=\"off\">\n// \t\t\t\t\t<FormControl fullWidth className={classes.formControl}>\n// \t\t\t\t\t\t<TextField\n// \t\t\t\t\t\t\tvariant=\"outlined\"\n// \t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\tid=\"name\"\n// \t\t\t\t\t\t\tlabel=\"Name\"\n// \t\t\t\t\t\t\tname=\"name\"\n// \t\t\t\t\t\t\tonChange= { handleChange }\n// \t\t\t\t\t\t\tvalue={formData.name}\n// \t\t\t\t\t\t\terror = { formErrors.name }\n// \t\t\t\t\t\t\thelperText={ formErrors.name ? 'Required' : ''}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</FormControl>\n// \t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n// \t\t\t\t\t\t<TextField\n// \t\t\t\t\t\t\tvariant=\"outlined\"\n// \t\t\t\t\t\t\tid=\"dob\"\n// \t\t\t\t\t\t\tlabel=\"DOB\"\n// \t\t\t\t\t\t\tname=\"dob\"\n// \t\t\t\t\t\t\ttype=\"date\"\n// \t\t\t\t\t\t\tonChange= { handleChange }\n// \t\t\t\t\t\t\tvalue={formData.dob}\n// \t\t\t\t\t\t\tinputProps={{max:getDate()}}\n// \t\t\t\t\t\t\tInputLabelProps={{shrink: true,}}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</FormControl>\n// \t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n// \t\t\t\t\t\t<TextField\n// \t\t\t\t\t\t\tvariant=\"outlined\"\n// \t\t\t\t\t\t\tid=\"address\"\n// \t\t\t\t\t\t\tlabel=\"Address\"\n// \t\t\t\t\t\t\tname=\"address\"\n// \t\t\t\t\t\t\tonChange= { handleChange }\n// \t\t\t\t\t\t\tvalue={formData.address}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</FormControl>\n// \t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\t\t\t\t\t\n// \t\t\t\t\t\t<TextField\n// \t\t\t\t\t\t\tvariant=\"outlined\"\n// \t\t\t\t\t\t\tid=\"passportNo\"\n// \t\t\t\t\t\t\tlabel=\"Passport No\"\n// \t\t\t\t\t\t\tname=\"passportNo\"\n// \t\t\t\t\t\t\tonChange= { handleChange }\n// \t\t\t\t\t\t\tvalue={formData.passportNo}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</FormControl>\n// \t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n// \t\t\t\t\t\t<InputLabel id=\"service-label\">Service</InputLabel>\n// \t\t\t\t\t\t<Select\n// \t\t\t\t\t\t\tlabelId=\"service-label\"\n// \t\t\t\t\t\t\tid=\"service\"\n// \t\t\t\t\t\t\tvalue={formData.service}\n// \t\t\t\t\t\t\tonChange= { handleChange }\n// \t\t\t\t\t\t\tlabel=\"Service\"\n// \t\t\t\t\t\t\tname=\"service\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t<MenuItem value=\"\">\n// \t\t\t\t\t\t\t\t<em>None</em>\n// \t\t\t\t\t\t\t</MenuItem>\n// \t\t\t\t\t\t\t{ services && services.map((row) => (\n// \t\t\t\t\t\t\t\t<MenuItem key={row.id} value={row.serviceName}>{row.serviceName}</MenuItem>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</Select>\n// \t\t\t\t\t</FormControl>\n// \t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl}\n// \t\t\t\t\t\terror = { formErrors.seatNo }\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<InputLabel id=\"seat-label\">Seat No</InputLabel>\n// \t\t\t\t\t\t<Select\n// \t\t\t\t\t\t\tlabelId=\"seat-label\"\n// \t\t\t\t\t\t\tid=\"seatNo\"\n// \t\t\t\t\t\t\tvalue={formData.seatNo}\n// \t\t\t\t\t\t\tonChange= { handleChange }\n// \t\t\t\t\t\t\tlabel=\"Seat No\"\n// \t\t\t\t\t\t\tname=\"seatNo\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t<MenuItem value=\"\">\n// \t\t\t\t\t\t\t\t<em>None</em>\n// \t\t\t\t\t\t\t</MenuItem>\n// \t\t\t\t\t\t\t{ seatList && seatList.map((row, index) => (\n// \t\t\t\t\t\t\t\t<MenuItem key={index+1} value={row}>{row}</MenuItem>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</Select>\n// \t\t\t\t\t\t{ formErrors.seatNo ? <FormHelperText>Required</FormHelperText> : ''}\t\t\t\t\t\t\n// \t\t\t\t\t</FormControl>\n// \t\t\t\t\t<FormControlLabel\n// \t\t\t\t\t\tcontrol={<Checkbox checked={formData.wheelChair} onChange={handleChange} name=\"wheelChair\" />}\n// \t\t\t\t\t\tlabel=\"Require Wheelchair\"\n// \t\t\t\t\t/>\n// \t\t\t\t\t<FormControlLabel\n// \t\t\t\t\t\tcontrol={<Checkbox checked={formData.infant} onChange={handleChange} name=\"infant\" />}\n// \t\t\t\t\t\tlabel=\"Have Infant\"\n// \t\t\t\t\t/>\n// \t\t\t\t\t<Button\n// \t\t\t\t\t\ttype=\"submit\"\n// \t\t\t\t\t\tfullWidth\n// \t\t\t\t\t\tvariant=\"contained\"\n// \t\t\t\t\t\tcolor=\"primary\"\n// \t\t\t\t\t\tclassName={classes.submit}\n// \t\t\t\t\t\tonClick = { handleSubmit }\n// \t\t\t\t\t>\n// \t\t\t\t\t\tSubmit\n// \t\t\t\t\t</Button>\n// \t\t\t\t</form>\n// \t\t\t</div>\t\t\n// \t\t</Container>\n// \t)\n// }\n// const mapStateToProps = (state, ownProps) => {\n// \tconst id = ownProps.match.params.id;\n// \tconst passengers = state.firestore.data.passengers;\n// \tconst passenger = passengers ? passengers[id] : null;\n// \treturn {\n// \t\tauth: state.firebase.auth,\n// \t\t// role: state.firebase.profile.role,\n// \t\tpassenger: passenger,\n// \t\tservices: state.firestore.ordered.services\n// \t}\n// }\n// const mapDispatchToProps = (dispatch) => {\n// \treturn {\n// \t\taddPassenger: (formData) => dispatch(addPassenger(formData)),\n// \t\tupdatePassenger: (id, formData) => dispatch(updatePassenger(id, formData)),\n// \t}\n// }\n// export default compose(\n// \tconnect(mapStateToProps, mapDispatchToProps),\n// \tfirestoreConnect(props => [\n// \t\t{ collection: 'passengers', doc: props.match.params.id },\n// \t\t{ collection: 'services', where: [['flightId', '==', props.match.params.flightId]] }\n// \t])\n// )(PassengerForm);\nimport React from 'react';\nexport default class PassengerForm extends React.Component {\n  componentDidMount() {\n    console.log(this.props.match.params.ids);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 4\n      }\n    }, \"kdlfj\");\n  }\n\n}","map":{"version":3,"sources":["/var/smartzi/airline-master/src/components/passengers/PassengerForm.js"],"names":["React","PassengerForm","Component","componentDidMount","console","log","props","match","params","ids","render"],"mappingskB,OAAlB;AACA,eAAe,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA2C;AACzDC,EAAAA,iBAAiB,GAAE;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,GAApC;AACA;;AACDC,EAAAA,MAAM,GAAE;AACP,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD;AAKA;;AAVwD","sourcesContent":["// import React, { useState } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Container from '@material-ui/core/Container';\n// import TextField from '@material-ui/core/TextField';\n// import Typography from '@material-ui/core/Typography';\n// import Button from '@material-ui/core/Button';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import Select from '@material-ui/core/Select';\n// import { firestoreConnect } from 'react-redux-firebase';\n// import { compose } from 'redux';\n// import { connect } from 'react-redux';\n// import { Redirect } from 'react-router-dom';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import FormHelperText from '@material-ui/core/FormHelperText';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import { addPassenger, updatePassenger } from '../../redux/actions/passengerActions';\n\n// const useStyles = makeStyles((theme) => ({\n// \tpaper: {\n// \t\tmarginTop: theme.spacing(4),\n// \t\tdisplay: 'flex',\n// \t\tflexDirection: 'column',\n// \t\talignItems: 'center',\n// \t},\n// \tform: {\n// \t\twidth: '100%', // Fix IE 11 issue.\n// \t},\n// \tsubmit: {\n// \t\tmargin: theme.spacing(2, 0, 2),\n// \t},\n// \tformControl: {\n// \t\tmargin: theme.spacing(1),\n// \t\tminWidth: 120,\n// \t},\n// }));\n\n// const getDate = () => {\n// \tlet now = new Date();\n// \tlet d = now.getDate();\n// \tlet m = now.getMonth();\n// \tlet y = now.getFullYear();\n\t\n// \treturn '' + y + '-' + (m<=9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d)\n// }\n\n// const getSeatList = () => {\n// \tlet rows = 10;\n// \tlet seats = ['A', 'B', 'C', 'D', 'E', 'F'];\n\t\n// \tlet seatList = [];\n// \tfor(let i=1; i <= rows; i++) {\n// \t\tfor(let j=0; j < seats.length; j++) {\n// \t\t\tlet seatNo = i + seats[j];\t\t\t\n// \t\t\tseatList.push(seatNo);\n// \t\t}\n// \t}\n\t\n// \treturn seatList;\n// }\n\n// const PassengerForm = (props) => {\n// \tconst classes = useStyles();\t\n// \tconst {auth, services, passenger} = props;\n// \tconst flightId = props.match.params.flightId;\n// \tconst passengerid = props.match.params.id ?? null;\n\t\n// \tconst seatList = getSeatList();\n\t\n// \tconst [formData, updateFormData] = useState({\n// \t\tflightId: flightId,\n// \t\tname: passenger ? passenger.name : '',\n// \t\tdob: passenger ? passenger.dob : getDate(),\n// \t\taddress: passenger ? passenger.address : '',\n// \t\tpassportNo: passenger ? passenger.passportNo : '',\n// \t\tservice: passenger ? passenger.service : '',\n// \t\tseatNo: passenger ? passenger.seatNo : '',\n// \t\twheelChair: passenger ? passenger.wheelChair : false,\n// \t\tinfant: passenger ? passenger.infant : false,\t\t\n// \t});\n\t\n// \tconst [formErrors, updateFormErrors] = useState({\n// \t\tname: false,\n// \t\tseatNo: false\n// \t});\n\t\n// \tif (!auth.uid) return <Redirect to='/login' />\n\t\n// \tconst handleChange = (e) => {\n// \t\tupdateFormData({\n// \t\t\t...formData,\n// \t\t\t[e.target.name]: (e.target.type === 'checkbox') ? e.target.checked : e.target.value.trim()\n// \t\t});\n\t\t\n// \t\tupdateFormErrors({\n// \t\t\t...formErrors,\n// \t\t\t[e.target.name]: (e.target.value.trim() === '') ? true : false\n// \t\t});\n// \t};\n\t\n// \tconst handleSubmit = (e) => {\n// \t\te.preventDefault();\n// \t\tif (formData.name === '') {\t\t\t\n// \t\t\tupdateFormErrors({\n// \t\t\t\t...formErrors,\n// \t\t\t\tname: true\n// \t\t\t});\n\t\t\t\n// \t\t\treturn false;\n// \t\t}\n\t\t\n// \t\tconsole.log(formData);\n\t\t\n// \t\tif (formData.seatNo === '') {\t\t\t\n// \t\t\tupdateFormErrors({\n// \t\t\t\t...formErrors,\n// \t\t\t\tseatNo: true\n// \t\t\t});\n\t\t\t\n// \t\t\treturn false;\n// \t\t}\t\t\n\t\t\n// \t\tif (passengerid) {\n// \t\t\tconsole.log(formData);\n// \t\t\tprops.updatePassenger(passengerid, formData);\n// \t\t} else {\n// \t\t\tprops.addPassenger(formData);\n// \t\t}\n// \t};\t\n\t\n// \treturn (\n// \t\t<Container component=\"main\" maxWidth=\"xs\">\t\t\n// \t\t\t<div className={classes.paper}>\n// \t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n// \t\t\t\t\tAdd a passenger\n// \t\t\t\t</Typography>\n\n// \t\t\t\t<form className={classes.form} autoComplete=\"off\">\n// \t\t\t\t\t<FormControl fullWidth className={classes.formControl}>\n// \t\t\t\t\t\t<TextField\n// \t\t\t\t\t\t\tvariant=\"outlined\"\n// \t\t\t\t\t\t\trequired\n// \t\t\t\t\t\t\tid=\"name\"\n// \t\t\t\t\t\t\tlabel=\"Name\"\n// \t\t\t\t\t\t\tname=\"name\"\n// \t\t\t\t\t\t\tonChange= { handleChange }\n// \t\t\t\t\t\t\tvalue={formData.name}\n// \t\t\t\t\t\t\terror = { formErrors.name }\n// \t\t\t\t\t\t\thelperText={ formErrors.name ? 'Required' : ''}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</FormControl>\n// \t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n// \t\t\t\t\t\t<TextField\n// \t\t\t\t\t\t\tvariant=\"outlined\"\n// \t\t\t\t\t\t\tid=\"dob\"\n// \t\t\t\t\t\t\tlabel=\"DOB\"\n// \t\t\t\t\t\t\tname=\"dob\"\n// \t\t\t\t\t\t\ttype=\"date\"\n// \t\t\t\t\t\t\tonChange= { handleChange }\n// \t\t\t\t\t\t\tvalue={formData.dob}\n// \t\t\t\t\t\t\tinputProps={{max:getDate()}}\n// \t\t\t\t\t\t\tInputLabelProps={{shrink: true,}}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</FormControl>\n// \t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n// \t\t\t\t\t\t<TextField\n// \t\t\t\t\t\t\tvariant=\"outlined\"\n// \t\t\t\t\t\t\tid=\"address\"\n// \t\t\t\t\t\t\tlabel=\"Address\"\n// \t\t\t\t\t\t\tname=\"address\"\n// \t\t\t\t\t\t\tonChange= { handleChange }\n// \t\t\t\t\t\t\tvalue={formData.address}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</FormControl>\n\t\t\t\t\t\n// \t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\t\t\t\t\t\n// \t\t\t\t\t\t<TextField\n// \t\t\t\t\t\t\tvariant=\"outlined\"\n// \t\t\t\t\t\t\tid=\"passportNo\"\n// \t\t\t\t\t\t\tlabel=\"Passport No\"\n// \t\t\t\t\t\t\tname=\"passportNo\"\n// \t\t\t\t\t\t\tonChange= { handleChange }\n// \t\t\t\t\t\t\tvalue={formData.passportNo}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</FormControl>\n\t\t\t\t\t\n// \t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl}>\n// \t\t\t\t\t\t<InputLabel id=\"service-label\">Service</InputLabel>\n// \t\t\t\t\t\t<Select\n// \t\t\t\t\t\t\tlabelId=\"service-label\"\n// \t\t\t\t\t\t\tid=\"service\"\n// \t\t\t\t\t\t\tvalue={formData.service}\n// \t\t\t\t\t\t\tonChange= { handleChange }\n// \t\t\t\t\t\t\tlabel=\"Service\"\n// \t\t\t\t\t\t\tname=\"service\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t<MenuItem value=\"\">\n// \t\t\t\t\t\t\t\t<em>None</em>\n// \t\t\t\t\t\t\t</MenuItem>\n// \t\t\t\t\t\t\t{ services && services.map((row) => (\n// \t\t\t\t\t\t\t\t<MenuItem key={row.id} value={row.serviceName}>{row.serviceName}</MenuItem>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</Select>\n// \t\t\t\t\t</FormControl>\n\t\t\t\t\t\n// \t\t\t\t\t<FormControl fullWidth variant=\"outlined\" className={classes.formControl}\n// \t\t\t\t\t\terror = { formErrors.seatNo }\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<InputLabel id=\"seat-label\">Seat No</InputLabel>\n// \t\t\t\t\t\t<Select\n// \t\t\t\t\t\t\tlabelId=\"seat-label\"\n// \t\t\t\t\t\t\tid=\"seatNo\"\n// \t\t\t\t\t\t\tvalue={formData.seatNo}\n// \t\t\t\t\t\t\tonChange= { handleChange }\n// \t\t\t\t\t\t\tlabel=\"Seat No\"\n// \t\t\t\t\t\t\tname=\"seatNo\"\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t<MenuItem value=\"\">\n// \t\t\t\t\t\t\t\t<em>None</em>\n// \t\t\t\t\t\t\t</MenuItem>\n// \t\t\t\t\t\t\t{ seatList && seatList.map((row, index) => (\n// \t\t\t\t\t\t\t\t<MenuItem key={index+1} value={row}>{row}</MenuItem>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</Select>\n// \t\t\t\t\t\t{ formErrors.seatNo ? <FormHelperText>Required</FormHelperText> : ''}\t\t\t\t\t\t\n// \t\t\t\t\t</FormControl>\n\t  \n// \t\t\t\t\t<FormControlLabel\n// \t\t\t\t\t\tcontrol={<Checkbox checked={formData.wheelChair} onChange={handleChange} name=\"wheelChair\" />}\n// \t\t\t\t\t\tlabel=\"Require Wheelchair\"\n// \t\t\t\t\t/>\n// \t\t\t\t\t<FormControlLabel\n// \t\t\t\t\t\tcontrol={<Checkbox checked={formData.infant} onChange={handleChange} name=\"infant\" />}\n// \t\t\t\t\t\tlabel=\"Have Infant\"\n// \t\t\t\t\t/>\n\t\n// \t\t\t\t\t<Button\n// \t\t\t\t\t\ttype=\"submit\"\n// \t\t\t\t\t\tfullWidth\n// \t\t\t\t\t\tvariant=\"contained\"\n// \t\t\t\t\t\tcolor=\"primary\"\n// \t\t\t\t\t\tclassName={classes.submit}\n// \t\t\t\t\t\tonClick = { handleSubmit }\n// \t\t\t\t\t>\n// \t\t\t\t\t\tSubmit\n// \t\t\t\t\t</Button>\n\t\t\t\t\t\n// \t\t\t\t</form>\n// \t\t\t</div>\t\t\n// \t\t</Container>\n// \t)\n// }\n\n// const mapStateToProps = (state, ownProps) => {\n// \tconst id = ownProps.match.params.id;\n// \tconst passengers = state.firestore.data.passengers;\n// \tconst passenger = passengers ? passengers[id] : null;\n\t\n// \treturn {\n// \t\tauth: state.firebase.auth,\n// \t\t// role: state.firebase.profile.role,\n// \t\tpassenger: passenger,\n// \t\tservices: state.firestore.ordered.services\n// \t}\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n// \treturn {\n// \t\taddPassenger: (formData) => dispatch(addPassenger(formData)),\n// \t\tupdatePassenger: (id, formData) => dispatch(updatePassenger(id, formData)),\n// \t}\n// }\n\n// export default compose(\n// \tconnect(mapStateToProps, mapDispatchToProps),\n// \tfirestoreConnect(props => [\n// \t\t{ collection: 'passengers', doc: props.match.params.id },\n// \t\t{ collection: 'services', where: [['flightId', '==', props.match.params.flightId]] }\n// \t])\n// )(PassengerForm);\n\nimport React from 'react';\nexport default class PassengerForm extends React.Component{\n\tcomponentDidMount(){\n\t\tconsole.log(this.props.match.params.ids)\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\tkdlfj\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module"}