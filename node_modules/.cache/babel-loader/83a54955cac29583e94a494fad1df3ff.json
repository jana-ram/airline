{"ast":null,"code":"var _jsxFileName = \"/var/smartzi/airline-master/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider, useSelector } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux'; // import { createBrowserHistory } from 'history';\n\nimport thunk from 'redux-thunk';\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducers from './redux/reducers';\nimport App from './components/App';\nimport firebaseConfig from './config/firebaseConfig';\nimport firebase from 'firebase/app';\nconst store = createStore(reducers, compose(applyMiddleware(thunk.withExtraArgument({\n  getFirebase,\n  getFirestore\n})), reduxFirestore(firebaseConfig)));\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n};\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}; // const history = createBrowserHistory({ basename: `${process.env.REACT_APP_BASE_URL}`});\n\nfunction AuthIsLoaded({\n  children\n}) {\n  const auth = useSelector(state => state.firebase.auth);\n  if (!isLoaded(auth)) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, \"Loading Screen...\");\n  return children;\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 4\n  }\n}), /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(AuthIsLoaded, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }\n}))))), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/var/smartzi/airline-master/src/index.js"],"names":["React","ReactDOM","serviceWorker","Provider","useSelector","createStore","applyMiddleware","compose","thunk","ReactReduxFirebaseProvider","getFirebase","isLoaded","reduxFirestore","getFirestore","createFirestoreInstance","BrowserRouter","reducers","App","firebaseConfig","firebase","store","withExtraArgument","rrfConfig","userProfile","useFirestoreForProfile","rrfProps","config","dispatch","AuthIsLoaded","children","auth","state","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;AACA,SAASC,WAAT,EAAuBC,eAAvB,EAAwCC,OAAxC,QAAuD,OAAvD,C,CACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,0BAAT,EAAqCC,WAArC,EAAkDC,QAAlD,QAAmE,sBAAnE;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,uBAAvC,QAAsE,iBAAtE;AACA,SAASC,aAAT,QAA+B,kBAA/B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,QAAP,MAAqB,cAArB;AAEA,MAAMC,KAAK,GAAGf,WAAW,CACxBW,QADwB,EAExBT,OAAO,CACND,eAAe,CAACE,KAAK,CAACa,iBAAN,CAAwB;AAAEX,EAAAA,WAAF;AAAeG,EAAAA;AAAf,CAAxB,CAAD,CADT,EAEND,cAAc,CAACM,cAAD,CAFR,CAFiB,CAAzB;AAQA,MAAMI,SAAS,GAAG;AACdC,EAAAA,WAAW,EAAE,OADC;AAEdC,EAAAA,sBAAsB,EAAE;AAFV,CAAlB;AAKA,MAAMC,QAAQ,GAAG;AACfN,EAAAA,QADe;AAEfO,EAAAA,MAAM,EAAEJ,SAFO;AAGfK,EAAAA,QAAQ,EAAEP,KAAK,CAACO,QAHD;AAIfb,EAAAA;AAJe,CAAjB,C,CAOA;;AAEA,SAASc,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAChC,QAAMC,IAAI,GAAG1B,WAAW,CAAC2B,KAAK,IAAIA,KAAK,CAACZ,QAAN,CAAeW,IAAzB,CAAxB;AACA,MAAI,CAACnB,QAAQ,CAACmB,IAAD,CAAb,EAAqB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACrB,SAAOD,QAAP;AACH;;AAED5B,QAAQ,CAAC+B,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,0BAAD,oBAAgCK,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD,CADD,CADD,CADF,EAUEQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF;AAaAhC,aAAa,CAACiC,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider, useSelector } from 'react-redux';\nimport { createStore , applyMiddleware, compose } from 'redux';\n// import { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded  } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { BrowserRouter  } from 'react-router-dom';\nimport reducers from './redux/reducers';\nimport App from './components/App';\nimport firebaseConfig from './config/firebaseConfig';\nimport firebase from 'firebase/app';\n\nconst store = createStore(\n\treducers, \n\tcompose(\n\t\tapplyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n\t\treduxFirestore(firebaseConfig)\n\t)\t\n);\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\n// const history = createBrowserHistory({ basename: `${process.env.REACT_APP_BASE_URL}`});\n\nfunction AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n    return children\n}\n\nReactDOM.render(\n\t\t<Provider store={store}>\n\t\t\t<ReactReduxFirebaseProvider {...rrfProps}>\n\t\t\t\t<BrowserRouter >\n\t\t\t\t\t<AuthIsLoaded>\n\t\t\t\t\t\t<App />\n\t\t\t\t\t</AuthIsLoaded>\n\t\t\t\t</BrowserRouter>\n\t\t\t</ReactReduxFirebaseProvider>\n\t\t</Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}