{"ast":null,"code":"import { ActionTypes } from '../actions/actionTypes';\nexport const getPassengerById = passenger => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('services').where(\"passengers\", \"==\", passenger).get().then(querySnapshot => {\n      const data = querySnapshot.docs.map(doc => doc.data());\n      console.log(data); // array of cities objects\n    });\n  };\n};\nexport const addPassenger = passenger => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('passengers').add(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_SUCCESS,\n        passenger\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};\nexport const updatePassenger = (id, passenger) => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('passengers').doc(id).update(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_SUCCESS\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/var/smartzi/airline-master/src/redux/actions/passengerActions.js"],"names":["ActionTypes","getPassengerById","passenger","dispatch","getState","getFirestore","firestore","collection","where","get","then","querySnapshot","data","docs","map","doc","console","log","addPassenger","add","type","ADD_PASSENGER_SUCCESS","catch","err","ADD_PASSENGER_ERROR","updatePassenger","id","update","UPDATE_PASSENGER_SUCCESS","UPDATE_PASSENGER_ERROR"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AAC9C,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,UAArB,EACCC,KADD,CACO,YADP,EACqB,IADrB,EAC2BN,SAD3B,EAECO,GAFD,GAGCC,IAHD,CAGMC,aAAa,IAAI;AACtB,YAAMC,IAAI,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAIA,GAAG,CAACH,IAAJ,EAA9B,CAAb;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAFsB,CAEH;AACjB,KANH;AAOA,GATD;AAUA,CAXM;AAaP,OAAO,MAAMM,YAAY,GAAIhB,SAAD,IAAe;AAC1C,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AAEAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCY,GAAnC,CAAuCjB,SAAvC,EAAkDQ,IAAlD,CAAuD,MAAM;AAC5DP,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAEpB,WAAW,CAACqB,qBAApB;AAA2CnB,QAAAA;AAA3C,OAAD,CAAR;AACA,KAFD,EAEGoB,KAFH,CAEUC,GAAD,IAAS;AACjBpB,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAEpB,WAAW,CAACwB,mBAApB;AAAyCD,QAAAA;AAAzC,OAAD,CAAR;AACA,KAJD;AAKA,GARD;AASA,CAVM;AAYP,OAAO,MAAME,eAAe,GAAG,CAACC,EAAD,EAAKxB,SAAL,KAAmB;AACjD,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCQ,GAAnC,CAAuCW,EAAvC,EAA2CC,MAA3C,CAAkDzB,SAAlD,EAA6DQ,IAA7D,CAAkE,MAAK;AACtEP,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAEpB,WAAW,CAAC4B;AAApB,OAAD,CAAR;AACA,KAFD,EAEGN,KAFH,CAEUC,GAAD,IAAS;AACjBpB,MAAAA,QAAQ,CAAC;AAAEiB,QAAAA,IAAI,EAAEpB,WAAW,CAAC6B,sBAApB;AAA4CN,QAAAA;AAA5C,OAAD,CAAR;AACA,KAJD;AAKA,GAPD;AAQA,CATM","sourcesContent":["import { ActionTypes } from '../actions/actionTypes';\n\nexport const getPassengerById = (passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\t\t\n\t\tconst firestore = getFirestore();\n\t\tfirestore.collection('services')\n\t\t.where(\"passengers\", \"==\", passenger)\n\t\t.get()\n\t\t.then(querySnapshot => {\n\t\t\tconst data = querySnapshot.docs.map(doc => doc.data());\n\t\t\tconsole.log(data); // array of cities objects\n\t\t  });\n\t}\n}\n\nexport const addPassenger = (passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\t\t\n\t\tconst firestore = getFirestore();\t\t\n\n\t\tfirestore.collection('passengers').add(passenger).then(() => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n\t\t});\n\t}\n}\n\nexport const updatePassenger = (id, passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\n\t\tconst firestore = getFirestore();\n\t\tfirestore.collection('passengers').doc(id).update(passenger).then(()=> {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_SUCCESS});\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_ERROR, err});\n\t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}