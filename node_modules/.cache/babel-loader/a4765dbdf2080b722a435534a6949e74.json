{"ast":null,"code":"import { ActionTypes } from '../actions/actionTypes';\nexport const createService = service => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('services').add({\n      flightId: service.flightId,\n      serviceName: service.serviceName\n    }).then(() => {\n      dispatch({\n        type: ActionTypes.CREATE_SERVICE_SUCCESS,\n        service\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.CREATE_SERVICE_ERROR,\n        err\n      });\n    });\n  };\n};\nexport const updateService = service => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('services').doc(service.id).update({\n      serviceName: service.serviceName\n    }).then(() => {\n      dispatch({\n        type: ActionTypes.UPDATE_SERVICE_SUCCESS\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.UPDATE_SERVICE_ERROR,\n        err\n      });\n    });\n  };\n};\nexport const deleteService = serviceId => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('services').doc(serviceId).delete().then(() => {\n      dispatch({\n        type: ActionTypes.DELETE_SERVICE_SUCCESS\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.DELETE_SERVICE_ERROR,\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/var/smartzi/airline-master/src/redux/actions/serviceActions.js"],"names":["ActionTypes","createService","service","dispatch","getState","getFirestore","firestore","collection","add","flightId","serviceName","then","type","CREATE_SERVICE_SUCCESS","catch","err","CREATE_SERVICE_ERROR","updateService","doc","id","update","UPDATE_SERVICE_SUCCESS","UPDATE_SERVICE_ERROR","deleteService","serviceId","delete","DELETE_SERVICE_SUCCESS","DELETE_SERVICE_ERROR"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AACzC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,CAAqC;AACpCC,MAAAA,QAAQ,EAAEP,OAAO,CAACO,QADkB;AAEpCC,MAAAA,WAAW,EAAER,OAAO,CAACQ;AAFe,KAArC,EAGGC,IAHH,CAGQ,MAAM;AACbR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEZ,WAAW,CAACa,sBAApB;AAA4CX,QAAAA;AAA5C,OAAD,CAAR;AACA,KALD,EAKGY,KALH,CAKUC,GAAD,IAAS;AACjBZ,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEZ,WAAW,CAACgB,oBAApB;AAA0CD,QAAAA;AAA1C,OAAD,CAAR;AACA,KAPD;AAQA,GAVD;AAWA,CAZM;AAcP,OAAO,MAAME,aAAa,GAAIf,OAAD,IAAa;AACzC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AAEAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,UAArB,EAAiCW,GAAjC,CAAqChB,OAAO,CAACiB,EAA7C,EAAiDC,MAAjD,CAAwD;AACvDV,MAAAA,WAAW,EAAER,OAAO,CAACQ;AADkC,KAAxD,EAEGC,IAFH,CAEQ,MAAK;AACZR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEZ,WAAW,CAACqB;AAApB,OAAD,CAAR;AACA,KAJD,EAIGP,KAJH,CAIUC,GAAD,IAAS;AACjBZ,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEZ,WAAW,CAACsB,oBAApB;AAA0CP,QAAAA;AAA1C,OAAD,CAAR;AACA,KAND;AAOA,GAVD;AAWA,CAZM;AAcP,OAAO,MAAMQ,aAAa,GAAIC,SAAD,IAAe;AAC3C,SAAO,CAACrB,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AAEAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,UAArB,EAAiCW,GAAjC,CAAqCM,SAArC,EAAgDC,MAAhD,GACCd,IADD,CACM,MAAK;AACVR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEZ,WAAW,CAAC0B;AAApB,OAAD,CAAR;AACA,KAHD,EAGGZ,KAHH,CAGUC,GAAD,IAAS;AACjBZ,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEZ,WAAW,CAAC2B,oBAApB;AAA0CZ,QAAAA;AAA1C,OAAD,CAAR;AACA,KALD;AAMA,GATD;AAUA,CAXM","sourcesContent":["import { ActionTypes } from '../actions/actionTypes';\n\nexport const createService = (service) => {\n\treturn (dispatch, getState, {getFirestore}) => {\n\t\tconst firestore = getFirestore();\t\t\n\t\tfirestore.collection('services').add({\n\t\t\tflightId: service.flightId,\n\t\t\tserviceName: service.serviceName\n\t\t}).then(() => {\n\t\t\tdispatch({ type: ActionTypes.CREATE_SERVICE_SUCCESS, service});\t\t\t\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.CREATE_SERVICE_ERROR, err });\n\t\t});\t\t\n\t}\n}\n\nexport const updateService = (service) => {\n\treturn (dispatch, getState, {getFirestore}) => {\n\t\tconst firestore = getFirestore();\n\t\t\n\t\tfirestore.collection('services').doc(service.id).update({\n\t\t\tserviceName: service.serviceName\n\t\t}).then(()=> {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_SERVICE_SUCCESS});\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_SERVICE_ERROR, err});\n\t\t});\n\t}\n}\n\nexport const deleteService = (serviceId) => {\n\treturn (dispatch, getState, {getFirestore}) => {\n\t\tconst firestore = getFirestore();\n\t\t\n\t\tfirestore.collection('services').doc(serviceId).delete()\n\t\t.then(()=> {\n\t\t\tdispatch({ type: ActionTypes.DELETE_SERVICE_SUCCESS});\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.DELETE_SERVICE_ERROR, err});\n\t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}