{"ast":null,"code":"import { ActionTypes } from '../actions/actionTypes';\nexport const getPassengerDetailById = passenger => {\n  console.log(passenger);\n  return false; // return (dispatch, getState, {getFirestore}) => {\t\t\n  // \tconst firestore = getFirestore();\t\t\n  // \tfirestore.collection('passengers').add(passenger).then(() => {\n  // \t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n  // \t}).catch((err) => {\n  // \t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n  // \t});\n  // }\n};\nexport const addPassenger = passenger => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('passengers').add(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_SUCCESS,\n        passenger\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};\nexport const updatePassenger = (id, passenger) => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('passengers').doc(id).update(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_SUCCESS\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/var/smartzi/airline-master/src/redux/actions/passengerActions.js"],"names":["ActionTypes","getPassengerDetailById","passenger","console","log","addPassenger","dispatch","getState","getFirestore","firestore","collection","add","then","type","ADD_PASSENGER_SUCCESS","catch","err","ADD_PASSENGER_ERROR","updatePassenger","id","doc","update","UPDATE_PASSENGER_SUCCESS","UPDATE_PASSENGER_ERROR"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAMC,sBAAsB,GAAIC,SAAD,IAAe;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAAuB,SAAO,KAAP,CAD6B,CAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVM;AAaP,OAAO,MAAMG,YAAY,GAAIH,SAAD,IAAe;AAC1C,SAAO,CAACI,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCC,GAAnC,CAAuCT,SAAvC,EAAkDU,IAAlD,CAAuD,MAAM;AAC5DN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEb,WAAW,CAACc,qBAApB;AAA2CZ,QAAAA;AAA3C,OAAD,CAAR;AACA,KAFD,EAEGa,KAFH,CAEUC,GAAD,IAAS;AACjBV,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEb,WAAW,CAACiB,mBAApB;AAAyCD,QAAAA;AAAzC,OAAD,CAAR;AACA,KAJD;AAKA,GAPD;AAQA,CATM;AAWP,OAAO,MAAME,eAAe,GAAG,CAACC,EAAD,EAAKjB,SAAL,KAAmB;AACjD,SAAO,CAACI,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AAEAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCU,GAAnC,CAAuCD,EAAvC,EAA2CE,MAA3C,CAAkDnB,SAAlD,EAA6DU,IAA7D,CAAkE,MAAK;AACtEN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEb,WAAW,CAACsB;AAApB,OAAD,CAAR;AACA,KAFD,EAEGP,KAFH,CAEUC,GAAD,IAAS;AACjBV,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEb,WAAW,CAACuB,sBAApB;AAA4CP,QAAAA;AAA5C,OAAD,CAAR;AACA,KAJD;AAKA,GARD;AASA,CAVM","sourcesContent":["import { ActionTypes } from '../actions/actionTypes';\n\nexport const getPassengerDetailById = (passenger) => {\n\tconsole.log(passenger);return false\n\t// return (dispatch, getState, {getFirestore}) => {\t\t\n\t// \tconst firestore = getFirestore();\t\t\n\t// \tfirestore.collection('passengers').add(passenger).then(() => {\n\t// \t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n\t// \t}).catch((err) => {\n\t// \t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n\t// \t});\n\t// }\n}\n\n\nexport const addPassenger = (passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\t\t\n\t\tconst firestore = getFirestore();\t\t\n\t\tfirestore.collection('passengers').add(passenger).then(() => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n\t\t});\n\t}\n}\n\nexport const updatePassenger = (id, passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\n\t\tconst firestore = getFirestore();\n\t\t\n\t\tfirestore.collection('passengers').doc(id).update(passenger).then(()=> {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_SUCCESS});\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_ERROR, err});\n\t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}