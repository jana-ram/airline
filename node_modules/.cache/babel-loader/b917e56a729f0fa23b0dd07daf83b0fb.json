{"ast":null,"code":"import { ActionTypes } from '../actions/actionTypes';\nexport const getPassengerById = passenger => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('services').where(\"flightId\", \"==\", passenger).get().then(querySnapshot => {\n      const passenger = querySnapshot.docs.map(doc => doc.data());\n      dispatch({\n        type: ActionTypes.GET_PASSENGER_SUCCESS,\n        passenger\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.GET_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};\nexport const addPassenger = passenger => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('passengers').add(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_SUCCESS,\n        passenger\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};\nexport const updatePassenger = (id, passenger) => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('passengers').doc(id).update(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_SUCCESS\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/var/smartzi/airline-master/src/redux/actions/passengerActions.js"],"names":["ActionTypes","getPassengerById","passenger","dispatch","getState","getFirestore","firestore","collection","where","get","then","querySnapshot","docs","map","doc","data","type","GET_PASSENGER_SUCCESS","catch","err","GET_PASSENGER_ERROR","addPassenger","add","ADD_PASSENGER_SUCCESS","ADD_PASSENGER_ERROR","updatePassenger","id","update","UPDATE_PASSENGER_SUCCESS","UPDATE_PASSENGER_ERROR"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AAC9C,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,UAArB,EACCC,KADD,CACO,UADP,EACmB,IADnB,EACyBN,SADzB,EAECO,GAFD,GAGCC,IAHD,CAGMC,aAAa,IAAI;AACtB,YAAMT,SAAS,GAAGS,aAAa,CAACC,IAAd,CAAmBC,GAAnB,CAAuBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA9B,CAAlB;AACAZ,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAEhB,WAAW,CAACiB,qBAApB;AAA2Cf,QAAAA;AAA3C,OAAD,CAAR;AACA,KAND,EAMGgB,KANH,CAMUC,GAAD,IAAS;AACjBhB,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAEhB,WAAW,CAACoB,mBAApB;AAAyCD,QAAAA;AAAzC,OAAD,CAAR;AACA,KARD;AASA,GAXD;AAYA,CAbM;AAeP,OAAO,MAAME,YAAY,GAAInB,SAAD,IAAe;AAC1C,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AAEAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCe,GAAnC,CAAuCpB,SAAvC,EAAkDQ,IAAlD,CAAuD,MAAM;AAC5DP,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAEhB,WAAW,CAACuB,qBAApB;AAA2CrB,QAAAA;AAA3C,OAAD,CAAR;AACA,KAFD,EAEGgB,KAFH,CAEUC,GAAD,IAAS;AACjBhB,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAEhB,WAAW,CAACwB,mBAApB;AAAyCL,QAAAA;AAAzC,OAAD,CAAR;AACA,KAJD;AAKA,GARD;AASA,CAVM;AAYP,OAAO,MAAMM,eAAe,GAAG,CAACC,EAAD,EAAKxB,SAAL,KAAmB;AACjD,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCO,GAAnC,CAAuCY,EAAvC,EAA2CC,MAA3C,CAAkDzB,SAAlD,EAA6DQ,IAA7D,CAAkE,MAAK;AACtEP,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAEhB,WAAW,CAAC4B;AAApB,OAAD,CAAR;AACA,KAFD,EAEGV,KAFH,CAEUC,GAAD,IAAS;AACjBhB,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAEhB,WAAW,CAAC6B,sBAApB;AAA4CV,QAAAA;AAA5C,OAAD,CAAR;AACA,KAJD;AAKA,GAPD;AAQA,CATM","sourcesContent":["import { ActionTypes } from '../actions/actionTypes';\n\nexport const getPassengerById = (passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\t\t\n\t\tconst firestore = getFirestore();\n\t\tfirestore.collection('services')\n\t\t.where(\"flightId\", \"==\", passenger)\n\t\t.get()\n\t\t.then(querySnapshot => {\n\t\t\tconst passenger = querySnapshot.docs.map(doc => doc.data());\n\t\t\tdispatch({ type: ActionTypes.GET_PASSENGER_SUCCESS, passenger});\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.GET_PASSENGER_ERROR, err });\n\t\t});\n\t}\n}\n\nexport const addPassenger = (passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\t\t\n\t\tconst firestore = getFirestore();\t\t\n\n\t\tfirestore.collection('passengers').add(passenger).then(() => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n\t\t});\n\t}\n}\n\nexport const updatePassenger = (id, passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\n\t\tconst firestore = getFirestore();\n\t\tfirestore.collection('passengers').doc(id).update(passenger).then(()=> {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_SUCCESS});\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_ERROR, err});\n\t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}