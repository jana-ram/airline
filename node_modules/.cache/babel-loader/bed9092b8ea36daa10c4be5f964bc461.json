{"ast":null,"code":"import { ActionTypes } from '../actions/actionTypes';\nexport const getPassengerById = passenger => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('services').where(\"flightId\", \"==\", passenger).then(res => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_SUCCESS,\n        passenger\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};\nexport const addPassenger = passenger => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('passengers').add(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_SUCCESS,\n        passenger\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};\nexport const updatePassenger = (id, passenger) => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    console.log(firestore);\n    return;\n    firestore.collection('passengers').doc(id).update(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_SUCCESS\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/var/smartzi/airline-master/src/redux/actions/passengerActions.js"],"names":["ActionTypes","getPassengerById","passenger","dispatch","getState","getFirestore","firestore","collection","where","then","res","type","ADD_PASSENGER_SUCCESS","catch","err","ADD_PASSENGER_ERROR","addPassenger","add","updatePassenger","id","console","log","doc","update","UPDATE_PASSENGER_SUCCESS","UPDATE_PASSENGER_ERROR"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AAC9C,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,UAArB,EAAiCC,KAAjC,CAAuC,UAAvC,EAAmD,IAAnD,EAAyDN,SAAzD,EAAoEO,IAApE,CAA0EC,GAAD,IAAS;AACjFP,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEX,WAAW,CAACY,qBAApB;AAA2CV,QAAAA;AAA3C,OAAD,CAAR;AACA,KAFD,EAEGW,KAFH,CAEUC,GAAD,IAAS;AACjBX,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEX,WAAW,CAACe,mBAApB;AAAyCD,QAAAA;AAAzC,OAAD,CAAR;AACA,KAJD;AAKA,GAPD;AAQA,CATM;AAWP,OAAO,MAAME,YAAY,GAAId,SAAD,IAAe;AAC1C,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AAEAC,IAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCU,GAAnC,CAAuCf,SAAvC,EAAkDO,IAAlD,CAAuD,MAAM;AAC5DN,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEX,WAAW,CAACY,qBAApB;AAA2CV,QAAAA;AAA3C,OAAD,CAAR;AACA,KAFD,EAEGW,KAFH,CAEUC,GAAD,IAAS;AACjBX,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEX,WAAW,CAACe,mBAApB;AAAyCD,QAAAA;AAAzC,OAAD,CAAR;AACA,KAJD;AAKA,GARD;AASA,CAVM;AAYP,OAAO,MAAMI,eAAe,GAAG,CAACC,EAAD,EAAKjB,SAAL,KAAmB;AACjD,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AAAuB;AACvBA,IAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCe,GAAnC,CAAuCH,EAAvC,EAA2CI,MAA3C,CAAkDrB,SAAlD,EAA6DO,IAA7D,CAAkE,MAAK;AACtEN,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEX,WAAW,CAACwB;AAApB,OAAD,CAAR;AACA,KAFD,EAEGX,KAFH,CAEUC,GAAD,IAAS;AACjBX,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEX,WAAW,CAACyB,sBAApB;AAA4CX,QAAAA;AAA5C,OAAD,CAAR;AACA,KAJD;AAKA,GARD;AASA,CAVM","sourcesContent":["import { ActionTypes } from '../actions/actionTypes';\n\nexport const getPassengerById = (passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\t\t\n\t\tconst firestore = getFirestore();\n\t\tfirestore.collection('services').where(\"flightId\", \"==\", passenger).then((res) => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n\t\t});\n\t}\n}\n\nexport const addPassenger = (passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\t\t\n\t\tconst firestore = getFirestore();\t\t\n\n\t\tfirestore.collection('passengers').add(passenger).then(() => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n\t\t});\n\t}\n}\n\nexport const updatePassenger = (id, passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\n\t\tconst firestore = getFirestore();\n\t\tconsole.log(firestore);return ;\n\t\tfirestore.collection('passengers').doc(id).update(passenger).then(()=> {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_SUCCESS});\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_ERROR, err});\n\t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}