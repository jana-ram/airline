{"ast":null,"code":"import { ActionTypes } from '../actions/actionTypes';\nimport { firestoreConnect, getFirebase } from 'react-redux-firebase';\nexport const getPassengerDetailById = (passenger, flightId) => dispatch => {\n  // const result = firestoreConnect(props => [\n  // \t{ collection: 'passengers', doc: passenger },\n  // \t{ collection: 'services', where: [['flightId', '==', flightId]] }\n  // ]).then(res=>{\n  // \tconsole.log(res)\n  // });\n  console.log('kama');\n  console.log(dispatch.firestore().collection('passengers').doc(passenger));\n  console.log(getFirebase()); // return (dispatch, getState, {getFirestore}) => {\t\t\n  // \tconst firestore = getFirestore();\t\t\n  // \tfirestore.collection('passengers').add(passenger).then(() => {\n  // \t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n  // \t}).catch((err) => {\n  // \t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n  // \t});\n  // }\n};\nexport const addPassenger = passenger => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('passengers').add(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_SUCCESS,\n        passenger\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.ADD_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};\nexport const updatePassenger = (id, passenger) => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection('passengers').doc(id).update(passenger).then(() => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_SUCCESS\n      });\n    }).catch(err => {\n      dispatch({\n        type: ActionTypes.UPDATE_PASSENGER_ERROR,\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/var/smartzi/airline-master/src/redux/actions/passengerActions.js"],"names":["ActionTypes","firestoreConnect","getFirebase","getPassengerDetailById","passenger","flightId","dispatch","console","log","firestore","collection","doc","addPassenger","getState","getFirestore","add","then","type","ADD_PASSENGER_SUCCESS","catch","err","ADD_PASSENGER_ERROR","updatePassenger","id","update","UPDATE_PASSENGER_SUCCESS","UPDATE_PASSENGER_ERROR"],"mappings":"AAAA,SAASA,WAAT,QAA4B,wBAA5B;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,sBAA9C;AACA,OAAO,MAAMC,sBAAsB,GAAG,CAACC,SAAD,EAAWC,QAAX,KAAyBC,QAAQ,IAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,SAAT,GAAqBC,UAArB,CAAgC,YAAhC,EAA8CC,GAA9C,CAAkDP,SAAlD,CAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAW,EAAvB,EATwE,CAUxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBM;AAqBP,OAAO,MAAMU,YAAY,GAAIR,SAAD,IAAe;AAC1C,SAAO,CAACE,QAAD,EAAWO,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAML,SAAS,GAAGK,YAAY,EAA9B;AACAL,IAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCK,GAAnC,CAAuCX,SAAvC,EAAkDY,IAAlD,CAAuD,MAAM;AAC5DV,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEjB,WAAW,CAACkB,qBAApB;AAA2Cd,QAAAA;AAA3C,OAAD,CAAR;AACA,KAFD,EAEGe,KAFH,CAEUC,GAAD,IAAS;AACjBd,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEjB,WAAW,CAACqB,mBAApB;AAAyCD,QAAAA;AAAzC,OAAD,CAAR;AACA,KAJD;AAKA,GAPD;AAQA,CATM;AAWP,OAAO,MAAME,eAAe,GAAG,CAACC,EAAD,EAAKnB,SAAL,KAAmB;AACjD,SAAO,CAACE,QAAD,EAAWO,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAwC;AAC9C,UAAML,SAAS,GAAGK,YAAY,EAA9B;AAEAL,IAAAA,SAAS,CAACC,UAAV,CAAqB,YAArB,EAAmCC,GAAnC,CAAuCY,EAAvC,EAA2CC,MAA3C,CAAkDpB,SAAlD,EAA6DY,IAA7D,CAAkE,MAAK;AACtEV,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEjB,WAAW,CAACyB;AAApB,OAAD,CAAR;AACA,KAFD,EAEGN,KAFH,CAEUC,GAAD,IAAS;AACjBd,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEjB,WAAW,CAAC0B,sBAApB;AAA4CN,QAAAA;AAA5C,OAAD,CAAR;AACA,KAJD;AAKA,GARD;AASA,CAVM","sourcesContent":["import { ActionTypes } from '../actions/actionTypes';\nimport { firestoreConnect, getFirebase } from 'react-redux-firebase';\nexport const getPassengerDetailById = (passenger,flightId)  => dispatch=>{\n\t// const result = firestoreConnect(props => [\n\t// \t{ collection: 'passengers', doc: passenger },\n\t// \t{ collection: 'services', where: [['flightId', '==', flightId]] }\n\t// ]).then(res=>{\n\t// \tconsole.log(res)\n\t// });\n\tconsole.log('kama')\n\tconsole.log(dispatch.firestore().collection('passengers').doc(passenger))\n\tconsole.log(getFirebase())\n\t// return (dispatch, getState, {getFirestore}) => {\t\t\n\t// \tconst firestore = getFirestore();\t\t\n\t// \tfirestore.collection('passengers').add(passenger).then(() => {\n\t// \t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n\t// \t}).catch((err) => {\n\t// \t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n\t// \t});\n\t// }\n}\n\n\nexport const addPassenger = (passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\t\t\n\t\tconst firestore = getFirestore();\t\t\n\t\tfirestore.collection('passengers').add(passenger).then(() => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_SUCCESS, passenger});\t\t\t\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.ADD_PASSENGER_ERROR, err });\n\t\t});\n\t}\n}\n\nexport const updatePassenger = (id, passenger) => {\n\treturn (dispatch, getState, {getFirestore}) => {\n\t\tconst firestore = getFirestore();\n\t\t\n\t\tfirestore.collection('passengers').doc(id).update(passenger).then(()=> {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_SUCCESS});\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: ActionTypes.UPDATE_PASSENGER_ERROR, err});\n\t\t});\n\t}\n}"]},"metadata":{},"sourceType":"module"}